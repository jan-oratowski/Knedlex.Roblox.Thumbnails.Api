/*
 * Thumbnails Api v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Knedlex.Roblox.Thumbnails.Api.Client.OpenAPIDateConverter;

namespace Knedlex.Roblox.Thumbnails.Api.Model
{
    /// <summary>
    /// RobloxWebWebAPIModelsApiErrorModel
    /// </summary>
    [DataContract(Name = "Roblox.Web.WebAPI.Models.ApiErrorModel")]
    public partial class RobloxWebWebAPIModelsApiErrorModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RobloxWebWebAPIModelsApiErrorModel" /> class.
        /// </summary>
        /// <param name="code">code.</param>
        /// <param name="message">message.</param>
        /// <param name="userFacingMessage">userFacingMessage.</param>
        /// <param name="field">field.</param>
        /// <param name="fieldData">fieldData.</param>
        public RobloxWebWebAPIModelsApiErrorModel(int code = default(int), string message = default(string), string userFacingMessage = default(string), string field = default(string), Object fieldData = default(Object))
        {
            this.Code = code;
            this.Message = message;
            this.UserFacingMessage = userFacingMessage;
            this.Field = field;
            this.FieldData = fieldData;
        }

        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name = "code", EmitDefaultValue = false)]
        public int Code { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets UserFacingMessage
        /// </summary>
        [DataMember(Name = "userFacingMessage", EmitDefaultValue = false)]
        public string UserFacingMessage { get; set; }

        /// <summary>
        /// Gets or Sets Field
        /// </summary>
        [DataMember(Name = "field", EmitDefaultValue = false)]
        public string Field { get; set; }

        /// <summary>
        /// Gets or Sets FieldData
        /// </summary>
        [DataMember(Name = "fieldData", EmitDefaultValue = false)]
        public Object FieldData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RobloxWebWebAPIModelsApiErrorModel {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  UserFacingMessage: ").Append(UserFacingMessage).Append("\n");
            sb.Append("  Field: ").Append(Field).Append("\n");
            sb.Append("  FieldData: ").Append(FieldData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
